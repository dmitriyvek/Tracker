"""add is_confirmed flag on users table

Revision ID: bb357c9f7295
Revises: 83ac0424087f
Create Date: 2021-04-17 15:59:08.234758

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bb357c9f7295'
down_revision = '83ac0424087f'
branch_labels = None
depends_on = None


metadata = sa.MetaData()
users_table = sa.Table(
    'users',
    metadata,
    sa.Column('id', sa.Integer, primary_key=True),
    sa.Column('username', sa.String, unique=True, nullable=False, index=True),
    sa.Column('password', sa.String, nullable=False),
    sa.Column('email', sa.String, unique=True, nullable=False),
    sa.Column('registered_at', sa.DateTime, default=sa.func.current_timestamp(
    ), nullable=False),
    sa.Column('is_admin', sa.Boolean, nullable=False, default=False,
              comment='If user has admin priviliges in app'),
    sa.Column('is_deleted', sa.Boolean, nullable=False, default=False),
    sa.Column('is_confirmed', sa.Boolean, nullable=False, default=False,
              comment='Is account is confirmed by email'),
    comment='Representation of user'
)


def upgrade():
    # add new nullable column
    op.add_column('users', sa.Column('is_confirmed', sa.Boolean(),
                  nullable=True, comment='Is account is confirmed by email'))

    # migrate data
    query = users_table.update().values(is_confirmed=True)
    op.execute(query)

    # make new column non-nullable
    op.alter_column('users', 'is_confirmed', nullable=False)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'is_confirmed')
    # ### end Alembic commands ###
